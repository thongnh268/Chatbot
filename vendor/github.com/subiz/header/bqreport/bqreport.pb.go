// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.11.2
// source: bqreport.proto

package bqreport

import (
	proto "github.com/golang/protobuf/proto"
	common "github.com/subiz/header/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type DateDim struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Year  int32 `protobuf:"varint,2,opt,name=year,proto3" json:"year,omitempty"`
	Month int32 `protobuf:"varint,3,opt,name=month,proto3" json:"month,omitempty"`
	Day   int32 `protobuf:"varint,4,opt,name=day,proto3" json:"day,omitempty"`
}

func (x *DateDim) Reset() {
	*x = DateDim{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bqreport_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DateDim) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DateDim) ProtoMessage() {}

func (x *DateDim) ProtoReflect() protoreflect.Message {
	mi := &file_bqreport_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DateDim.ProtoReflect.Descriptor instead.
func (*DateDim) Descriptor() ([]byte, []int) {
	return file_bqreport_proto_rawDescGZIP(), []int{0}
}

func (x *DateDim) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *DateDim) GetMonth() int32 {
	if x != nil {
		return x.Month
	}
	return 0
}

func (x *DateDim) GetDay() int32 {
	if x != nil {
		return x.Day
	}
	return 0
}

type DateRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From *DateDim `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	To   *DateDim `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *DateRange) Reset() {
	*x = DateRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bqreport_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DateRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DateRange) ProtoMessage() {}

func (x *DateRange) ProtoReflect() protoreflect.Message {
	mi := &file_bqreport_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DateRange.ProtoReflect.Descriptor instead.
func (*DateRange) Descriptor() ([]byte, []int) {
	return file_bqreport_proto_rawDescGZIP(), []int{1}
}

func (x *DateRange) GetFrom() *DateDim {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *DateRange) GetTo() *DateDim {
	if x != nil {
		return x.To
	}
	return nil
}

type DimensionFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Channel       *common.StringParams `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
	ChannelSource *common.StringParams `protobuf:"bytes,3,opt,name=channel_source,json=channelSource,proto3" json:"channel_source,omitempty"`
	AgentId       *common.StringParams `protobuf:"bytes,4,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	Tag           *common.StringParams `protobuf:"bytes,5,opt,name=tag,proto3" json:"tag,omitempty"`
	Rate          *common.NumberParams `protobuf:"bytes,6,opt,name=rate,proto3" json:"rate,omitempty"`
	CreatedDate   *DateRange           `protobuf:"bytes,7,opt,name=created_date,json=createdDate,proto3" json:"created_date,omitempty"`
	Hour          *common.NumberParams `protobuf:"bytes,8,opt,name=hour,proto3" json:"hour,omitempty"`
	Minute        *common.NumberParams `protobuf:"bytes,9,opt,name=minute,proto3" json:"minute,omitempty"`
	Dim           string               `protobuf:"bytes,10,opt,name=dim,proto3" json:"dim,omitempty"`
	Dims          []string             `protobuf:"bytes,11,rep,name=dims,proto3" json:"dims,omitempty"`
}

func (x *DimensionFilter) Reset() {
	*x = DimensionFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bqreport_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DimensionFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DimensionFilter) ProtoMessage() {}

func (x *DimensionFilter) ProtoReflect() protoreflect.Message {
	mi := &file_bqreport_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DimensionFilter.ProtoReflect.Descriptor instead.
func (*DimensionFilter) Descriptor() ([]byte, []int) {
	return file_bqreport_proto_rawDescGZIP(), []int{2}
}

func (x *DimensionFilter) GetChannel() *common.StringParams {
	if x != nil {
		return x.Channel
	}
	return nil
}

func (x *DimensionFilter) GetChannelSource() *common.StringParams {
	if x != nil {
		return x.ChannelSource
	}
	return nil
}

func (x *DimensionFilter) GetAgentId() *common.StringParams {
	if x != nil {
		return x.AgentId
	}
	return nil
}

func (x *DimensionFilter) GetTag() *common.StringParams {
	if x != nil {
		return x.Tag
	}
	return nil
}

func (x *DimensionFilter) GetRate() *common.NumberParams {
	if x != nil {
		return x.Rate
	}
	return nil
}

func (x *DimensionFilter) GetCreatedDate() *DateRange {
	if x != nil {
		return x.CreatedDate
	}
	return nil
}

func (x *DimensionFilter) GetHour() *common.NumberParams {
	if x != nil {
		return x.Hour
	}
	return nil
}

func (x *DimensionFilter) GetMinute() *common.NumberParams {
	if x != nil {
		return x.Minute
	}
	return nil
}

func (x *DimensionFilter) GetDim() string {
	if x != nil {
		return x.Dim
	}
	return ""
}

func (x *DimensionFilter) GetDims() []string {
	if x != nil {
		return x.Dims
	}
	return nil
}

type ConversationFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Channel       *common.StringParams `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
	ChannelSource *common.StringParams `protobuf:"bytes,3,opt,name=channel_source,json=channelSource,proto3" json:"channel_source,omitempty"`
	CreatedDate   *DateRange           `protobuf:"bytes,4,opt,name=created_date,json=createdDate,proto3" json:"created_date,omitempty"`
	Dim           string               `protobuf:"bytes,5,opt,name=dim,proto3" json:"dim,omitempty"`
	Dims          []string             `protobuf:"bytes,6,rep,name=dims,proto3" json:"dims,omitempty"`
}

func (x *ConversationFilter) Reset() {
	*x = ConversationFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bqreport_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversationFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationFilter) ProtoMessage() {}

func (x *ConversationFilter) ProtoReflect() protoreflect.Message {
	mi := &file_bqreport_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationFilter.ProtoReflect.Descriptor instead.
func (*ConversationFilter) Descriptor() ([]byte, []int) {
	return file_bqreport_proto_rawDescGZIP(), []int{3}
}

func (x *ConversationFilter) GetChannel() *common.StringParams {
	if x != nil {
		return x.Channel
	}
	return nil
}

func (x *ConversationFilter) GetChannelSource() *common.StringParams {
	if x != nil {
		return x.ChannelSource
	}
	return nil
}

func (x *ConversationFilter) GetCreatedDate() *DateRange {
	if x != nil {
		return x.CreatedDate
	}
	return nil
}

func (x *ConversationFilter) GetDim() string {
	if x != nil {
		return x.Dim
	}
	return ""
}

func (x *ConversationFilter) GetDims() []string {
	if x != nil {
		return x.Dims
	}
	return nil
}

type ConversationMetric struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx               *common.Context `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	DateDim           *DateDim        `protobuf:"bytes,2,opt,name=date_dim,json=dateDim,proto3" json:"date_dim,omitempty"`
	HourDim           int64           `protobuf:"varint,3,opt,name=hour_dim,json=hourDim,proto3" json:"hour_dim,omitempty"`
	FirstReplyTimeAvg float32         `protobuf:"fixed32,4,opt,name=first_reply_time_avg,json=firstReplyTimeAvg,proto3" json:"first_reply_time_avg,omitempty"`
	HasUserCount      int64           `protobuf:"varint,5,opt,name=has_user_count,json=hasUserCount,proto3" json:"has_user_count,omitempty"`
}

func (x *ConversationMetric) Reset() {
	*x = ConversationMetric{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bqreport_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversationMetric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationMetric) ProtoMessage() {}

func (x *ConversationMetric) ProtoReflect() protoreflect.Message {
	mi := &file_bqreport_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationMetric.ProtoReflect.Descriptor instead.
func (*ConversationMetric) Descriptor() ([]byte, []int) {
	return file_bqreport_proto_rawDescGZIP(), []int{4}
}

func (x *ConversationMetric) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *ConversationMetric) GetDateDim() *DateDim {
	if x != nil {
		return x.DateDim
	}
	return nil
}

func (x *ConversationMetric) GetHourDim() int64 {
	if x != nil {
		return x.HourDim
	}
	return 0
}

func (x *ConversationMetric) GetFirstReplyTimeAvg() float32 {
	if x != nil {
		return x.FirstReplyTimeAvg
	}
	return 0
}

func (x *ConversationMetric) GetHasUserCount() int64 {
	if x != nil {
		return x.HasUserCount
	}
	return 0
}

type ConversationReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx  *common.Context       `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	Data []*ConversationMetric `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ConversationReport) Reset() {
	*x = ConversationReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bqreport_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversationReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationReport) ProtoMessage() {}

func (x *ConversationReport) ProtoReflect() protoreflect.Message {
	mi := &file_bqreport_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationReport.ProtoReflect.Descriptor instead.
func (*ConversationReport) Descriptor() ([]byte, []int) {
	return file_bqreport_proto_rawDescGZIP(), []int{5}
}

func (x *ConversationReport) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *ConversationReport) GetData() []*ConversationMetric {
	if x != nil {
		return x.Data
	}
	return nil
}

type ConversationRateMetric struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx     *common.Context `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	DateDim *DateDim        `protobuf:"bytes,2,opt,name=date_dim,json=dateDim,proto3" json:"date_dim,omitempty"`
	Count   int64           `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *ConversationRateMetric) Reset() {
	*x = ConversationRateMetric{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bqreport_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversationRateMetric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationRateMetric) ProtoMessage() {}

func (x *ConversationRateMetric) ProtoReflect() protoreflect.Message {
	mi := &file_bqreport_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationRateMetric.ProtoReflect.Descriptor instead.
func (*ConversationRateMetric) Descriptor() ([]byte, []int) {
	return file_bqreport_proto_rawDescGZIP(), []int{6}
}

func (x *ConversationRateMetric) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *ConversationRateMetric) GetDateDim() *DateDim {
	if x != nil {
		return x.DateDim
	}
	return nil
}

func (x *ConversationRateMetric) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ConversationRateReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx  *common.Context           `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	Data []*ConversationRateMetric `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ConversationRateReport) Reset() {
	*x = ConversationRateReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bqreport_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversationRateReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationRateReport) ProtoMessage() {}

func (x *ConversationRateReport) ProtoReflect() protoreflect.Message {
	mi := &file_bqreport_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationRateReport.ProtoReflect.Descriptor instead.
func (*ConversationRateReport) Descriptor() ([]byte, []int) {
	return file_bqreport_proto_rawDescGZIP(), []int{7}
}

func (x *ConversationRateReport) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *ConversationRateReport) GetData() []*ConversationRateMetric {
	if x != nil {
		return x.Data
	}
	return nil
}

type ConversationTagMetric struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx     *common.Context `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	DateDim *DateDim        `protobuf:"bytes,2,opt,name=date_dim,json=dateDim,proto3" json:"date_dim,omitempty"`
	Count   int64           `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *ConversationTagMetric) Reset() {
	*x = ConversationTagMetric{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bqreport_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversationTagMetric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationTagMetric) ProtoMessage() {}

func (x *ConversationTagMetric) ProtoReflect() protoreflect.Message {
	mi := &file_bqreport_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationTagMetric.ProtoReflect.Descriptor instead.
func (*ConversationTagMetric) Descriptor() ([]byte, []int) {
	return file_bqreport_proto_rawDescGZIP(), []int{8}
}

func (x *ConversationTagMetric) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *ConversationTagMetric) GetDateDim() *DateDim {
	if x != nil {
		return x.DateDim
	}
	return nil
}

func (x *ConversationTagMetric) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ConversationTagReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx  *common.Context          `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	Data []*ConversationTagMetric `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ConversationTagReport) Reset() {
	*x = ConversationTagReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bqreport_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversationTagReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationTagReport) ProtoMessage() {}

func (x *ConversationTagReport) ProtoReflect() protoreflect.Message {
	mi := &file_bqreport_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationTagReport.ProtoReflect.Descriptor instead.
func (*ConversationTagReport) Descriptor() ([]byte, []int) {
	return file_bqreport_proto_rawDescGZIP(), []int{9}
}

func (x *ConversationTagReport) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *ConversationTagReport) GetData() []*ConversationTagMetric {
	if x != nil {
		return x.Data
	}
	return nil
}

type ConversationAgentFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId     *common.StringParams `protobuf:"bytes,2,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	CreatedDate *DateRange           `protobuf:"bytes,3,opt,name=created_date,json=createdDate,proto3" json:"created_date,omitempty"`
	Dim         string               `protobuf:"bytes,4,opt,name=dim,proto3" json:"dim,omitempty"`
	Dims        []string             `protobuf:"bytes,5,rep,name=dims,proto3" json:"dims,omitempty"`
}

func (x *ConversationAgentFilter) Reset() {
	*x = ConversationAgentFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bqreport_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversationAgentFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationAgentFilter) ProtoMessage() {}

func (x *ConversationAgentFilter) ProtoReflect() protoreflect.Message {
	mi := &file_bqreport_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationAgentFilter.ProtoReflect.Descriptor instead.
func (*ConversationAgentFilter) Descriptor() ([]byte, []int) {
	return file_bqreport_proto_rawDescGZIP(), []int{10}
}

func (x *ConversationAgentFilter) GetAgentId() *common.StringParams {
	if x != nil {
		return x.AgentId
	}
	return nil
}

func (x *ConversationAgentFilter) GetCreatedDate() *DateRange {
	if x != nil {
		return x.CreatedDate
	}
	return nil
}

func (x *ConversationAgentFilter) GetDim() string {
	if x != nil {
		return x.Dim
	}
	return ""
}

func (x *ConversationAgentFilter) GetDims() []string {
	if x != nil {
		return x.Dims
	}
	return nil
}

type ConversationAgentMetric struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx                      *common.Context `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	DateDim                  *DateDim        `protobuf:"bytes,2,opt,name=date_dim,json=dateDim,proto3" json:"date_dim,omitempty"`
	Count                    int64           `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	IsReplyByAgentCount      int64           `protobuf:"varint,4,opt,name=is_reply_by_agent_count,json=isReplyByAgentCount,proto3" json:"is_reply_by_agent_count,omitempty"`
	IsGreatRateCount         int64           `protobuf:"varint,5,opt,name=is_great_rate_count,json=isGreatRateCount,proto3" json:"is_great_rate_count,omitempty"`
	IsReplyCount             int64           `protobuf:"varint,6,opt,name=is_reply_count,json=isReplyCount,proto3" json:"is_reply_count,omitempty"`
	FirstReplyTimeByAgentAvg float32         `protobuf:"fixed32,7,opt,name=first_reply_time_by_agent_avg,json=firstReplyTimeByAgentAvg,proto3" json:"first_reply_time_by_agent_avg,omitempty"`
	MessageByAgentCount      int64           `protobuf:"varint,8,opt,name=message_by_agent_count,json=messageByAgentCount,proto3" json:"message_by_agent_count,omitempty"`
}

func (x *ConversationAgentMetric) Reset() {
	*x = ConversationAgentMetric{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bqreport_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversationAgentMetric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationAgentMetric) ProtoMessage() {}

func (x *ConversationAgentMetric) ProtoReflect() protoreflect.Message {
	mi := &file_bqreport_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationAgentMetric.ProtoReflect.Descriptor instead.
func (*ConversationAgentMetric) Descriptor() ([]byte, []int) {
	return file_bqreport_proto_rawDescGZIP(), []int{11}
}

func (x *ConversationAgentMetric) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *ConversationAgentMetric) GetDateDim() *DateDim {
	if x != nil {
		return x.DateDim
	}
	return nil
}

func (x *ConversationAgentMetric) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ConversationAgentMetric) GetIsReplyByAgentCount() int64 {
	if x != nil {
		return x.IsReplyByAgentCount
	}
	return 0
}

func (x *ConversationAgentMetric) GetIsGreatRateCount() int64 {
	if x != nil {
		return x.IsGreatRateCount
	}
	return 0
}

func (x *ConversationAgentMetric) GetIsReplyCount() int64 {
	if x != nil {
		return x.IsReplyCount
	}
	return 0
}

func (x *ConversationAgentMetric) GetFirstReplyTimeByAgentAvg() float32 {
	if x != nil {
		return x.FirstReplyTimeByAgentAvg
	}
	return 0
}

func (x *ConversationAgentMetric) GetMessageByAgentCount() int64 {
	if x != nil {
		return x.MessageByAgentCount
	}
	return 0
}

type ConversationAgentReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx  *common.Context            `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	Data []*ConversationAgentMetric `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ConversationAgentReport) Reset() {
	*x = ConversationAgentReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bqreport_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversationAgentReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationAgentReport) ProtoMessage() {}

func (x *ConversationAgentReport) ProtoReflect() protoreflect.Message {
	mi := &file_bqreport_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationAgentReport.ProtoReflect.Descriptor instead.
func (*ConversationAgentReport) Descriptor() ([]byte, []int) {
	return file_bqreport_proto_rawDescGZIP(), []int{12}
}

func (x *ConversationAgentReport) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *ConversationAgentReport) GetData() []*ConversationAgentMetric {
	if x != nil {
		return x.Data
	}
	return nil
}

type MessageOfAgentMetric struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx     *common.Context `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	DateDim *DateDim        `protobuf:"bytes,2,opt,name=date_dim,json=dateDim,proto3" json:"date_dim,omitempty"`
	Count   int64           `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *MessageOfAgentMetric) Reset() {
	*x = MessageOfAgentMetric{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bqreport_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageOfAgentMetric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageOfAgentMetric) ProtoMessage() {}

func (x *MessageOfAgentMetric) ProtoReflect() protoreflect.Message {
	mi := &file_bqreport_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageOfAgentMetric.ProtoReflect.Descriptor instead.
func (*MessageOfAgentMetric) Descriptor() ([]byte, []int) {
	return file_bqreport_proto_rawDescGZIP(), []int{13}
}

func (x *MessageOfAgentMetric) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *MessageOfAgentMetric) GetDateDim() *DateDim {
	if x != nil {
		return x.DateDim
	}
	return nil
}

func (x *MessageOfAgentMetric) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type MessageOfAgentReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx  *common.Context         `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	Data []*MessageOfAgentMetric `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *MessageOfAgentReport) Reset() {
	*x = MessageOfAgentReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bqreport_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageOfAgentReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageOfAgentReport) ProtoMessage() {}

func (x *MessageOfAgentReport) ProtoReflect() protoreflect.Message {
	mi := &file_bqreport_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageOfAgentReport.ProtoReflect.Descriptor instead.
func (*MessageOfAgentReport) Descriptor() ([]byte, []int) {
	return file_bqreport_proto_rawDescGZIP(), []int{14}
}

func (x *MessageOfAgentReport) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *MessageOfAgentReport) GetData() []*MessageOfAgentMetric {
	if x != nil {
		return x.Data
	}
	return nil
}

type AgentAvailabilityMetric struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx     *common.Context `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	DateDim *DateDim        `protobuf:"bytes,2,opt,name=date_dim,json=dateDim,proto3" json:"date_dim,omitempty"`
	Count   int64           `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *AgentAvailabilityMetric) Reset() {
	*x = AgentAvailabilityMetric{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bqreport_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentAvailabilityMetric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentAvailabilityMetric) ProtoMessage() {}

func (x *AgentAvailabilityMetric) ProtoReflect() protoreflect.Message {
	mi := &file_bqreport_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentAvailabilityMetric.ProtoReflect.Descriptor instead.
func (*AgentAvailabilityMetric) Descriptor() ([]byte, []int) {
	return file_bqreport_proto_rawDescGZIP(), []int{15}
}

func (x *AgentAvailabilityMetric) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *AgentAvailabilityMetric) GetDateDim() *DateDim {
	if x != nil {
		return x.DateDim
	}
	return nil
}

func (x *AgentAvailabilityMetric) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type AgentAvailabilityReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctx  *common.Context            `protobuf:"bytes,1,opt,name=ctx,proto3" json:"ctx,omitempty"`
	Data []*AgentAvailabilityMetric `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *AgentAvailabilityReport) Reset() {
	*x = AgentAvailabilityReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bqreport_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentAvailabilityReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentAvailabilityReport) ProtoMessage() {}

func (x *AgentAvailabilityReport) ProtoReflect() protoreflect.Message {
	mi := &file_bqreport_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentAvailabilityReport.ProtoReflect.Descriptor instead.
func (*AgentAvailabilityReport) Descriptor() ([]byte, []int) {
	return file_bqreport_proto_rawDescGZIP(), []int{16}
}

func (x *AgentAvailabilityReport) GetCtx() *common.Context {
	if x != nil {
		return x.Ctx
	}
	return nil
}

func (x *AgentAvailabilityReport) GetData() []*AgentAvailabilityMetric {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_bqreport_proto protoreflect.FileDescriptor

var file_bqreport_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x62, 0x71, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x62, 0x71, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x45, 0x0a, 0x07, 0x44, 0x61, 0x74, 0x65,
	0x44, 0x69, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x10, 0x0a,
	0x03, 0x64, 0x61, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x64, 0x61, 0x79, 0x22,
	0x55, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x25, 0x0a, 0x04,
	0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x62, 0x71, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x44, 0x69, 0x6d, 0x52, 0x04, 0x66,
	0x72, 0x6f, 0x6d, 0x12, 0x21, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x62, 0x71, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x44,
	0x69, 0x6d, 0x52, 0x02, 0x74, 0x6f, 0x22, 0xb7, 0x03, 0x0a, 0x0f, 0x44, 0x69, 0x6d, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x07, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x3b, 0x0a, 0x0e, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x2f, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52,
	0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x03, 0x74, 0x61, 0x67,
	0x12, 0x28, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x12, 0x36, 0x0a, 0x0c, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x62, 0x71, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x65,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x68, 0x6f, 0x75, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x04, 0x68, 0x6f, 0x75, 0x72, 0x12, 0x2c, 0x0a, 0x06,
	0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x52, 0x06, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69,
	0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x69, 0x6d, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x69, 0x6d, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x64, 0x69, 0x6d, 0x73,
	0x22, 0xdf, 0x01, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x07,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x3b, 0x0a, 0x0e, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x36, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62, 0x71, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52,
	0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x64, 0x69, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x69, 0x6d, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x69, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x64, 0x69,
	0x6d, 0x73, 0x22, 0xd7, 0x01, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x21, 0x0a, 0x03, 0x63, 0x74, 0x78,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x03, 0x63, 0x74, 0x78, 0x12, 0x2c, 0x0a, 0x08,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x69, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x62, 0x71, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x44, 0x69,
	0x6d, 0x52, 0x07, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x6f,
	0x75, 0x72, 0x5f, 0x64, 0x69, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x68, 0x6f,
	0x75, 0x72, 0x44, 0x69, 0x6d, 0x12, 0x2f, 0x0a, 0x14, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x72,
	0x65, 0x70, 0x6c, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x61, 0x76, 0x67, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x11, 0x66, 0x69, 0x72, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54,
	0x69, 0x6d, 0x65, 0x41, 0x76, 0x67, 0x12, 0x24, 0x0a, 0x0e, 0x68, 0x61, 0x73, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x68, 0x61, 0x73, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x69, 0x0a, 0x12,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x12, 0x21, 0x0a, 0x03, 0x63, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x52, 0x03, 0x63, 0x74, 0x78, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x71, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x43,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x7f, 0x0a, 0x16, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x12, 0x21, 0x0a, 0x03, 0x63, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52,
	0x03, 0x63, 0x74, 0x78, 0x12, 0x2c, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x69, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x62, 0x71, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x44, 0x69, 0x6d, 0x52, 0x07, 0x64, 0x61, 0x74, 0x65, 0x44,
	0x69, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x71, 0x0a, 0x16, 0x43, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x12, 0x21, 0x0a, 0x03, 0x63, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x52, 0x03, 0x63, 0x74, 0x78, 0x12, 0x34, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x71, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x43,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x7e, 0x0a, 0x15, 0x43,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x67, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x12, 0x21, 0x0a, 0x03, 0x63, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x52, 0x03, 0x63, 0x74, 0x78, 0x12, 0x2c, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x64, 0x69, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x62, 0x71, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x44, 0x69, 0x6d, 0x52, 0x07, 0x64, 0x61,
	0x74, 0x65, 0x44, 0x69, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x6f, 0x0a, 0x15, 0x43,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x67, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x21, 0x0a, 0x03, 0x63, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x52, 0x03, 0x63, 0x74, 0x78, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x71, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x67,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa8, 0x01, 0x0a,
	0x17, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x0c, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x62, 0x71, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x64, 0x69, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x69, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x69, 0x6d, 0x73, 0x22, 0x81, 0x03, 0x0a, 0x17, 0x43, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x12, 0x21, 0x0a, 0x03, 0x63, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x52, 0x03, 0x63, 0x74, 0x78, 0x12, 0x2c, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x64,
	0x69, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x62, 0x71, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x44, 0x69, 0x6d, 0x52, 0x07, 0x64, 0x61, 0x74,
	0x65, 0x44, 0x69, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x17, 0x69, 0x73,
	0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x62, 0x79, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x69, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x42, 0x79, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x2d, 0x0a, 0x13, 0x69, 0x73, 0x5f, 0x67, 0x72, 0x65, 0x61, 0x74, 0x5f, 0x72, 0x61, 0x74,
	0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x69,
	0x73, 0x47, 0x72, 0x65, 0x61, 0x74, 0x52, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x24, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x69, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3f, 0x0a, 0x1d, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x72,
	0x65, 0x70, 0x6c, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x62, 0x79, 0x5f, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x5f, 0x61, 0x76, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x18, 0x66, 0x69,
	0x72, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x79, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x41, 0x76, 0x67, 0x12, 0x33, 0x0a, 0x16, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x62, 0x79, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42,
	0x79, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x73, 0x0a, 0x17, 0x43,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x21, 0x0a, 0x03, 0x63, 0x74, 0x78, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x52, 0x03, 0x63, 0x74, 0x78, 0x12, 0x35, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x71, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x7d, 0x0a, 0x14, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x66, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x21, 0x0a, 0x03, 0x63, 0x74, 0x78, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x03, 0x63, 0x74, 0x78, 0x12, 0x2c, 0x0a, 0x08, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x64, 0x69, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x62, 0x71, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x44, 0x69, 0x6d,
	0x52, 0x07, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x6d, 0x0a, 0x14, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x66, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x21, 0x0a, 0x03, 0x63, 0x74, 0x78, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x03, 0x63, 0x74, 0x78, 0x12, 0x32, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x71, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x66, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x80,
	0x01, 0x0a, 0x17, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x21, 0x0a, 0x03, 0x63, 0x74,
	0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x03, 0x63, 0x74, 0x78, 0x12, 0x2c, 0x0a,
	0x08, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x69, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x62, 0x71, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x44,
	0x69, 0x6d, 0x52, 0x07, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x73, 0x0a, 0x17, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x21, 0x0a, 0x03,
	0x63, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x03, 0x63, 0x74, 0x78, 0x12,
	0x35, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x62, 0x71, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x41, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x22, 0x5a, 0x20, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x75, 0x62, 0x69, 0x7a, 0x2f, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x2f, 0x62, 0x71, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_bqreport_proto_rawDescOnce sync.Once
	file_bqreport_proto_rawDescData = file_bqreport_proto_rawDesc
)

func file_bqreport_proto_rawDescGZIP() []byte {
	file_bqreport_proto_rawDescOnce.Do(func() {
		file_bqreport_proto_rawDescData = protoimpl.X.CompressGZIP(file_bqreport_proto_rawDescData)
	})
	return file_bqreport_proto_rawDescData
}

var file_bqreport_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_bqreport_proto_goTypes = []interface{}{
	(*DateDim)(nil),                 // 0: bqreport.DateDim
	(*DateRange)(nil),               // 1: bqreport.DateRange
	(*DimensionFilter)(nil),         // 2: bqreport.DimensionFilter
	(*ConversationFilter)(nil),      // 3: bqreport.ConversationFilter
	(*ConversationMetric)(nil),      // 4: bqreport.ConversationMetric
	(*ConversationReport)(nil),      // 5: bqreport.ConversationReport
	(*ConversationRateMetric)(nil),  // 6: bqreport.ConversationRateMetric
	(*ConversationRateReport)(nil),  // 7: bqreport.ConversationRateReport
	(*ConversationTagMetric)(nil),   // 8: bqreport.ConversationTagMetric
	(*ConversationTagReport)(nil),   // 9: bqreport.ConversationTagReport
	(*ConversationAgentFilter)(nil), // 10: bqreport.ConversationAgentFilter
	(*ConversationAgentMetric)(nil), // 11: bqreport.ConversationAgentMetric
	(*ConversationAgentReport)(nil), // 12: bqreport.ConversationAgentReport
	(*MessageOfAgentMetric)(nil),    // 13: bqreport.MessageOfAgentMetric
	(*MessageOfAgentReport)(nil),    // 14: bqreport.MessageOfAgentReport
	(*AgentAvailabilityMetric)(nil), // 15: bqreport.AgentAvailabilityMetric
	(*AgentAvailabilityReport)(nil), // 16: bqreport.AgentAvailabilityReport
	(*common.StringParams)(nil),     // 17: common.StringParams
	(*common.NumberParams)(nil),     // 18: common.NumberParams
	(*common.Context)(nil),          // 19: common.Context
}
var file_bqreport_proto_depIdxs = []int32{
	0,  // 0: bqreport.DateRange.from:type_name -> bqreport.DateDim
	0,  // 1: bqreport.DateRange.to:type_name -> bqreport.DateDim
	17, // 2: bqreport.DimensionFilter.channel:type_name -> common.StringParams
	17, // 3: bqreport.DimensionFilter.channel_source:type_name -> common.StringParams
	17, // 4: bqreport.DimensionFilter.agent_id:type_name -> common.StringParams
	17, // 5: bqreport.DimensionFilter.tag:type_name -> common.StringParams
	18, // 6: bqreport.DimensionFilter.rate:type_name -> common.NumberParams
	1,  // 7: bqreport.DimensionFilter.created_date:type_name -> bqreport.DateRange
	18, // 8: bqreport.DimensionFilter.hour:type_name -> common.NumberParams
	18, // 9: bqreport.DimensionFilter.minute:type_name -> common.NumberParams
	17, // 10: bqreport.ConversationFilter.channel:type_name -> common.StringParams
	17, // 11: bqreport.ConversationFilter.channel_source:type_name -> common.StringParams
	1,  // 12: bqreport.ConversationFilter.created_date:type_name -> bqreport.DateRange
	19, // 13: bqreport.ConversationMetric.ctx:type_name -> common.Context
	0,  // 14: bqreport.ConversationMetric.date_dim:type_name -> bqreport.DateDim
	19, // 15: bqreport.ConversationReport.ctx:type_name -> common.Context
	4,  // 16: bqreport.ConversationReport.data:type_name -> bqreport.ConversationMetric
	19, // 17: bqreport.ConversationRateMetric.ctx:type_name -> common.Context
	0,  // 18: bqreport.ConversationRateMetric.date_dim:type_name -> bqreport.DateDim
	19, // 19: bqreport.ConversationRateReport.ctx:type_name -> common.Context
	6,  // 20: bqreport.ConversationRateReport.data:type_name -> bqreport.ConversationRateMetric
	19, // 21: bqreport.ConversationTagMetric.ctx:type_name -> common.Context
	0,  // 22: bqreport.ConversationTagMetric.date_dim:type_name -> bqreport.DateDim
	19, // 23: bqreport.ConversationTagReport.ctx:type_name -> common.Context
	8,  // 24: bqreport.ConversationTagReport.data:type_name -> bqreport.ConversationTagMetric
	17, // 25: bqreport.ConversationAgentFilter.agent_id:type_name -> common.StringParams
	1,  // 26: bqreport.ConversationAgentFilter.created_date:type_name -> bqreport.DateRange
	19, // 27: bqreport.ConversationAgentMetric.ctx:type_name -> common.Context
	0,  // 28: bqreport.ConversationAgentMetric.date_dim:type_name -> bqreport.DateDim
	19, // 29: bqreport.ConversationAgentReport.ctx:type_name -> common.Context
	11, // 30: bqreport.ConversationAgentReport.data:type_name -> bqreport.ConversationAgentMetric
	19, // 31: bqreport.MessageOfAgentMetric.ctx:type_name -> common.Context
	0,  // 32: bqreport.MessageOfAgentMetric.date_dim:type_name -> bqreport.DateDim
	19, // 33: bqreport.MessageOfAgentReport.ctx:type_name -> common.Context
	13, // 34: bqreport.MessageOfAgentReport.data:type_name -> bqreport.MessageOfAgentMetric
	19, // 35: bqreport.AgentAvailabilityMetric.ctx:type_name -> common.Context
	0,  // 36: bqreport.AgentAvailabilityMetric.date_dim:type_name -> bqreport.DateDim
	19, // 37: bqreport.AgentAvailabilityReport.ctx:type_name -> common.Context
	15, // 38: bqreport.AgentAvailabilityReport.data:type_name -> bqreport.AgentAvailabilityMetric
	39, // [39:39] is the sub-list for method output_type
	39, // [39:39] is the sub-list for method input_type
	39, // [39:39] is the sub-list for extension type_name
	39, // [39:39] is the sub-list for extension extendee
	0,  // [0:39] is the sub-list for field type_name
}

func init() { file_bqreport_proto_init() }
func file_bqreport_proto_init() {
	if File_bqreport_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bqreport_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DateDim); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bqreport_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DateRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bqreport_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DimensionFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bqreport_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConversationFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bqreport_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConversationMetric); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bqreport_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConversationReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bqreport_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConversationRateMetric); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bqreport_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConversationRateReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bqreport_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConversationTagMetric); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bqreport_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConversationTagReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bqreport_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConversationAgentFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bqreport_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConversationAgentMetric); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bqreport_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConversationAgentReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bqreport_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageOfAgentMetric); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bqreport_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageOfAgentReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bqreport_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentAvailabilityMetric); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bqreport_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentAvailabilityReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bqreport_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bqreport_proto_goTypes,
		DependencyIndexes: file_bqreport_proto_depIdxs,
		MessageInfos:      file_bqreport_proto_msgTypes,
	}.Build()
	File_bqreport_proto = out.File
	file_bqreport_proto_rawDesc = nil
	file_bqreport_proto_goTypes = nil
	file_bqreport_proto_depIdxs = nil
}
