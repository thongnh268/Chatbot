// Code generated by "perm_generator -file vendor/github.com/subiz/header/common/common.pb.go -type Permission"; DO NOT EDIT.

package perm

import "github.com/subiz/header/common"

func contains(s string, ss []string) bool {
	for _, i := range ss {
		if i == s {
			return true
		}
	}
	return false
}

var CREATEPERM = strPermToInt("c")
var READPERM = strPermToInt("r")
var UPDATEPERM = strPermToInt("u")
var DELETEPERM = strPermToInt("d")

func CheckCreateAccount(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetAccount()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(CREATEPERM, callerperm, ismine, isaccount)
}

func CheckReadAccount(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetAccount()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(READPERM, callerperm, ismine, isaccount)
}

func CheckUpdateAccount(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetAccount()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(UPDATEPERM, callerperm, ismine, isaccount)
}

func CheckDeleteAccount(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetAccount()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(DELETEPERM, callerperm, ismine, isaccount)
}
func CheckCreateAgent(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetAgent()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(CREATEPERM, callerperm, ismine, isaccount)
}

func CheckReadAgent(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetAgent()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(READPERM, callerperm, ismine, isaccount)
}

func CheckUpdateAgent(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetAgent()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(UPDATEPERM, callerperm, ismine, isaccount)
}

func CheckDeleteAgent(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetAgent()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(DELETEPERM, callerperm, ismine, isaccount)
}
func CheckCreateAgentPassword(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetAgentPassword()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(CREATEPERM, callerperm, ismine, isaccount)
}

func CheckReadAgentPassword(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetAgentPassword()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(READPERM, callerperm, ismine, isaccount)
}

func CheckUpdateAgentPassword(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetAgentPassword()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(UPDATEPERM, callerperm, ismine, isaccount)
}

func CheckDeleteAgentPassword(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetAgentPassword()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(DELETEPERM, callerperm, ismine, isaccount)
}
func CheckCreatePermission(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetPermission()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(CREATEPERM, callerperm, ismine, isaccount)
}

func CheckReadPermission(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetPermission()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(READPERM, callerperm, ismine, isaccount)
}

func CheckUpdatePermission(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetPermission()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(UPDATEPERM, callerperm, ismine, isaccount)
}

func CheckDeletePermission(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetPermission()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(DELETEPERM, callerperm, ismine, isaccount)
}
func CheckCreateAgentGroup(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetAgentGroup()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(CREATEPERM, callerperm, ismine, isaccount)
}

func CheckReadAgentGroup(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetAgentGroup()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(READPERM, callerperm, ismine, isaccount)
}

func CheckUpdateAgentGroup(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetAgentGroup()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(UPDATEPERM, callerperm, ismine, isaccount)
}

func CheckDeleteAgentGroup(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetAgentGroup()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(DELETEPERM, callerperm, ismine, isaccount)
}
func CheckCreateSegmentation(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetSegmentation()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(CREATEPERM, callerperm, ismine, isaccount)
}

func CheckReadSegmentation(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetSegmentation()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(READPERM, callerperm, ismine, isaccount)
}

func CheckUpdateSegmentation(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetSegmentation()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(UPDATEPERM, callerperm, ismine, isaccount)
}

func CheckDeleteSegmentation(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetSegmentation()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(DELETEPERM, callerperm, ismine, isaccount)
}
func CheckCreateClient(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetClient()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(CREATEPERM, callerperm, ismine, isaccount)
}

func CheckReadClient(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetClient()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(READPERM, callerperm, ismine, isaccount)
}

func CheckUpdateClient(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetClient()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(UPDATEPERM, callerperm, ismine, isaccount)
}

func CheckDeleteClient(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetClient()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(DELETEPERM, callerperm, ismine, isaccount)
}
func CheckCreateRule(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetRule()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(CREATEPERM, callerperm, ismine, isaccount)
}

func CheckReadRule(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetRule()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(READPERM, callerperm, ismine, isaccount)
}

func CheckUpdateRule(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetRule()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(UPDATEPERM, callerperm, ismine, isaccount)
}

func CheckDeleteRule(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetRule()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(DELETEPERM, callerperm, ismine, isaccount)
}
func CheckCreateConversation(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetConversation()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(CREATEPERM, callerperm, ismine, isaccount)
}

func CheckReadConversation(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetConversation()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(READPERM, callerperm, ismine, isaccount)
}

func CheckUpdateConversation(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetConversation()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(UPDATEPERM, callerperm, ismine, isaccount)
}

func CheckDeleteConversation(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetConversation()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(DELETEPERM, callerperm, ismine, isaccount)
}
func CheckCreateIntegration(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetIntegration()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(CREATEPERM, callerperm, ismine, isaccount)
}

func CheckReadIntegration(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetIntegration()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(READPERM, callerperm, ismine, isaccount)
}

func CheckUpdateIntegration(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetIntegration()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(UPDATEPERM, callerperm, ismine, isaccount)
}

func CheckDeleteIntegration(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetIntegration()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(DELETEPERM, callerperm, ismine, isaccount)
}
func CheckCreateCannedResponse(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetCannedResponse()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(CREATEPERM, callerperm, ismine, isaccount)
}

func CheckReadCannedResponse(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetCannedResponse()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(READPERM, callerperm, ismine, isaccount)
}

func CheckUpdateCannedResponse(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetCannedResponse()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(UPDATEPERM, callerperm, ismine, isaccount)
}

func CheckDeleteCannedResponse(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetCannedResponse()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(DELETEPERM, callerperm, ismine, isaccount)
}
func CheckCreateTag(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetTag()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(CREATEPERM, callerperm, ismine, isaccount)
}

func CheckReadTag(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetTag()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(READPERM, callerperm, ismine, isaccount)
}

func CheckUpdateTag(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetTag()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(UPDATEPERM, callerperm, ismine, isaccount)
}

func CheckDeleteTag(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetTag()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(DELETEPERM, callerperm, ismine, isaccount)
}
func CheckCreateWhitelistIp(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetWhitelistIp()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(CREATEPERM, callerperm, ismine, isaccount)
}

func CheckReadWhitelistIp(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetWhitelistIp()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(READPERM, callerperm, ismine, isaccount)
}

func CheckUpdateWhitelistIp(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetWhitelistIp()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(UPDATEPERM, callerperm, ismine, isaccount)
}

func CheckDeleteWhitelistIp(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetWhitelistIp()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(DELETEPERM, callerperm, ismine, isaccount)
}
func CheckCreateWhitelistUser(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetWhitelistUser()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(CREATEPERM, callerperm, ismine, isaccount)
}

func CheckReadWhitelistUser(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetWhitelistUser()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(READPERM, callerperm, ismine, isaccount)
}

func CheckUpdateWhitelistUser(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetWhitelistUser()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(UPDATEPERM, callerperm, ismine, isaccount)
}

func CheckDeleteWhitelistUser(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetWhitelistUser()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(DELETEPERM, callerperm, ismine, isaccount)
}
func CheckCreateWhitelistDomain(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetWhitelistDomain()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(CREATEPERM, callerperm, ismine, isaccount)
}

func CheckReadWhitelistDomain(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetWhitelistDomain()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(READPERM, callerperm, ismine, isaccount)
}

func CheckUpdateWhitelistDomain(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetWhitelistDomain()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(UPDATEPERM, callerperm, ismine, isaccount)
}

func CheckDeleteWhitelistDomain(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetWhitelistDomain()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(DELETEPERM, callerperm, ismine, isaccount)
}
func CheckCreateWidget(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetWidget()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(CREATEPERM, callerperm, ismine, isaccount)
}

func CheckReadWidget(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetWidget()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(READPERM, callerperm, ismine, isaccount)
}

func CheckUpdateWidget(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetWidget()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(UPDATEPERM, callerperm, ismine, isaccount)
}

func CheckDeleteWidget(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetWidget()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(DELETEPERM, callerperm, ismine, isaccount)
}
func CheckCreateSubscription(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetSubscription()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(CREATEPERM, callerperm, ismine, isaccount)
}

func CheckReadSubscription(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetSubscription()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(READPERM, callerperm, ismine, isaccount)
}

func CheckUpdateSubscription(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetSubscription()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(UPDATEPERM, callerperm, ismine, isaccount)
}

func CheckDeleteSubscription(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetSubscription()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(DELETEPERM, callerperm, ismine, isaccount)
}
func CheckCreateInvoice(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetInvoice()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(CREATEPERM, callerperm, ismine, isaccount)
}

func CheckReadInvoice(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetInvoice()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(READPERM, callerperm, ismine, isaccount)
}

func CheckUpdateInvoice(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetInvoice()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(UPDATEPERM, callerperm, ismine, isaccount)
}

func CheckDeleteInvoice(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetInvoice()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(DELETEPERM, callerperm, ismine, isaccount)
}
func CheckCreatePaymentMethod(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetPaymentMethod()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(CREATEPERM, callerperm, ismine, isaccount)
}

func CheckReadPaymentMethod(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetPaymentMethod()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(READPERM, callerperm, ismine, isaccount)
}

func CheckUpdatePaymentMethod(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetPaymentMethod()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(UPDATEPERM, callerperm, ismine, isaccount)
}

func CheckDeletePaymentMethod(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetPaymentMethod()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(DELETEPERM, callerperm, ismine, isaccount)
}
func CheckCreateBill(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetBill()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(CREATEPERM, callerperm, ismine, isaccount)
}

func CheckReadBill(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetBill()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(READPERM, callerperm, ismine, isaccount)
}

func CheckUpdateBill(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetBill()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(UPDATEPERM, callerperm, ismine, isaccount)
}

func CheckDeleteBill(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetBill()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(DELETEPERM, callerperm, ismine, isaccount)
}
func CheckCreatePaymentLog(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetPaymentLog()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(CREATEPERM, callerperm, ismine, isaccount)
}

func CheckReadPaymentLog(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetPaymentLog()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(READPERM, callerperm, ismine, isaccount)
}

func CheckUpdatePaymentLog(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetPaymentLog()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(UPDATEPERM, callerperm, ismine, isaccount)
}

func CheckDeletePaymentLog(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetPaymentLog()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(DELETEPERM, callerperm, ismine, isaccount)
}
func CheckCreatePaymentComment(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetPaymentComment()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(CREATEPERM, callerperm, ismine, isaccount)
}

func CheckReadPaymentComment(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetPaymentComment()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(READPERM, callerperm, ismine, isaccount)
}

func CheckUpdatePaymentComment(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetPaymentComment()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(UPDATEPERM, callerperm, ismine, isaccount)
}

func CheckDeletePaymentComment(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetPaymentComment()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(DELETEPERM, callerperm, ismine, isaccount)
}
func CheckCreateUser(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetUser()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(CREATEPERM, callerperm, ismine, isaccount)
}

func CheckReadUser(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetUser()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(READPERM, callerperm, ismine, isaccount)
}

func CheckUpdateUser(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetUser()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(UPDATEPERM, callerperm, ismine, isaccount)
}

func CheckDeleteUser(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetUser()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(DELETEPERM, callerperm, ismine, isaccount)
}
func CheckCreateAutomation(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetAutomation()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(CREATEPERM, callerperm, ismine, isaccount)
}

func CheckReadAutomation(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetAutomation()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(READPERM, callerperm, ismine, isaccount)
}

func CheckUpdateAutomation(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetAutomation()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(UPDATEPERM, callerperm, ismine, isaccount)
}

func CheckDeleteAutomation(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetAutomation()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(DELETEPERM, callerperm, ismine, isaccount)
}
func CheckCreatePing(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetPing()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(CREATEPERM, callerperm, ismine, isaccount)
}

func CheckReadPing(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetPing()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(READPERM, callerperm, ismine, isaccount)
}

func CheckUpdatePing(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetPing()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(UPDATEPERM, callerperm, ismine, isaccount)
}

func CheckDeletePing(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetPing()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(DELETEPERM, callerperm, ismine, isaccount)
}
func CheckCreateAttribute(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetAttribute()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(CREATEPERM, callerperm, ismine, isaccount)
}

func CheckReadAttribute(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetAttribute()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(READPERM, callerperm, ismine, isaccount)
}

func CheckUpdateAttribute(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetAttribute()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(UPDATEPERM, callerperm, ismine, isaccount)
}

func CheckDeleteAttribute(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetAttribute()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(DELETEPERM, callerperm, ismine, isaccount)
}
func CheckCreateAgentNotification(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetAgentNotification()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(CREATEPERM, callerperm, ismine, isaccount)
}

func CheckReadAgentNotification(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetAgentNotification()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(READPERM, callerperm, ismine, isaccount)
}

func CheckUpdateAgentNotification(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetAgentNotification()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(UPDATEPERM, callerperm, ismine, isaccount)
}

func CheckDeleteAgentNotification(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetAgentNotification()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(DELETEPERM, callerperm, ismine, isaccount)
}
func CheckCreateConversationExport(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetConversationExport()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(CREATEPERM, callerperm, ismine, isaccount)
}

func CheckReadConversationExport(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetConversationExport()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(READPERM, callerperm, ismine, isaccount)
}

func CheckUpdateConversationExport(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetConversationExport()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(UPDATEPERM, callerperm, ismine, isaccount)
}

func CheckDeleteConversationExport(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetConversationExport()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(DELETEPERM, callerperm, ismine, isaccount)
}
func CheckCreateConversationReport(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetConversationReport()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(CREATEPERM, callerperm, ismine, isaccount)
}

func CheckReadConversationReport(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetConversationReport()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(READPERM, callerperm, ismine, isaccount)
}

func CheckUpdateConversationReport(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetConversationReport()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(UPDATEPERM, callerperm, ismine, isaccount)
}

func CheckDeleteConversationReport(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetConversationReport()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(DELETEPERM, callerperm, ismine, isaccount)
}
func CheckCreateContent(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetContent()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(CREATEPERM, callerperm, ismine, isaccount)
}

func CheckReadContent(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetContent()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(READPERM, callerperm, ismine, isaccount)
}

func CheckUpdateContent(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetContent()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(UPDATEPERM, callerperm, ismine, isaccount)
}

func CheckDeleteContent(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetContent()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(DELETEPERM, callerperm, ismine, isaccount)
}
func CheckCreatePipeline(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetPipeline()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(CREATEPERM, callerperm, ismine, isaccount)
}

func CheckReadPipeline(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetPipeline()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(READPERM, callerperm, ismine, isaccount)
}

func CheckUpdatePipeline(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetPipeline()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(UPDATEPERM, callerperm, ismine, isaccount)
}

func CheckDeletePipeline(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetPipeline()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(DELETEPERM, callerperm, ismine, isaccount)
}
func CheckCreateCurrency(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetCurrency()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(CREATEPERM, callerperm, ismine, isaccount)
}

func CheckReadCurrency(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetCurrency()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(READPERM, callerperm, ismine, isaccount)
}

func CheckUpdateCurrency(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetCurrency()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(UPDATEPERM, callerperm, ismine, isaccount)
}

func CheckDeleteCurrency(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetCurrency()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(DELETEPERM, callerperm, ismine, isaccount)
}
func CheckCreateServiceLevelAgreement(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetServiceLevelAgreement()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(CREATEPERM, callerperm, ismine, isaccount)
}

func CheckReadServiceLevelAgreement(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetServiceLevelAgreement()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(READPERM, callerperm, ismine, isaccount)
}

func CheckUpdateServiceLevelAgreement(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetServiceLevelAgreement()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(UPDATEPERM, callerperm, ismine, isaccount)
}

func CheckDeleteServiceLevelAgreement(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetServiceLevelAgreement()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(DELETEPERM, callerperm, ismine, isaccount)
}
func CheckCreateMessageTemplate(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetMessageTemplate()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(CREATEPERM, callerperm, ismine, isaccount)
}

func CheckReadMessageTemplate(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetMessageTemplate()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(READPERM, callerperm, ismine, isaccount)
}

func CheckUpdateMessageTemplate(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetMessageTemplate()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(UPDATEPERM, callerperm, ismine, isaccount)
}

func CheckDeleteMessageTemplate(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetMessageTemplate()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(DELETEPERM, callerperm, ismine, isaccount)
}
func CheckCreateAgentPresence(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetAgentPresence()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(CREATEPERM, callerperm, ismine, isaccount)
}

func CheckReadAgentPresence(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetAgentPresence()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(READPERM, callerperm, ismine, isaccount)
}

func CheckUpdateAgentPresence(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetAgentPresence()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(UPDATEPERM, callerperm, ismine, isaccount)
}

func CheckDeleteAgentPresence(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetAgentPresence()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(DELETEPERM, callerperm, ismine, isaccount)
}
func CheckCreateAgentPreference(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetAgentPreference()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(CREATEPERM, callerperm, ismine, isaccount)
}

func CheckReadAgentPreference(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetAgentPreference()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(READPERM, callerperm, ismine, isaccount)
}

func CheckUpdateAgentPreference(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetAgentPreference()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(UPDATEPERM, callerperm, ismine, isaccount)
}

func CheckDeleteAgentPreference(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetAgentPreference()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(DELETEPERM, callerperm, ismine, isaccount)
}
func CheckCreatePromotionCode(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetPromotionCode()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(CREATEPERM, callerperm, ismine, isaccount)
}

func CheckReadPromotionCode(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetPromotionCode()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(READPERM, callerperm, ismine, isaccount)
}

func CheckUpdatePromotionCode(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetPromotionCode()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(UPDATEPERM, callerperm, ismine, isaccount)
}

func CheckDeletePromotionCode(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetPromotionCode()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(DELETEPERM, callerperm, ismine, isaccount)
}
func CheckCreateReferral(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetReferral()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(CREATEPERM, callerperm, ismine, isaccount)
}

func CheckReadReferral(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetReferral()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(READPERM, callerperm, ismine, isaccount)
}

func CheckUpdateReferral(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetReferral()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(UPDATEPERM, callerperm, ismine, isaccount)
}

func CheckDeleteReferral(cred *common.Credential, accid string, agids ...string) error {
	callerperm := cred.GetPerm().GetReferral()
	ismine := cred.GetAccountId() == accid && contains(cred.GetIssuer(), agids)
	isaccount := cred.GetAccountId() == accid
	return checkPerm(DELETEPERM, callerperm, ismine, isaccount)
}

func pInt32(i int32) *int32 {
	return &i
}

// IntersectPermission finds the intersection of permission a and permission b
func IntersectPermission(a, b *common.Permission) *common.Permission {
	if a == nil {
		a = &common.Permission{}
	}

	if b == nil {
		b = &common.Permission{}
	}

	return &common.Permission{
		Account:               a.GetAccount() & b.GetAccount(),
		Agent:                 a.GetAgent() & b.GetAgent(),
		AgentPassword:         a.GetAgentPassword() & b.GetAgentPassword(),
		Permission:            a.GetPermission() & b.GetPermission(),
		AgentGroup:            a.GetAgentGroup() & b.GetAgentGroup(),
		Segmentation:          a.GetSegmentation() & b.GetSegmentation(),
		Client:                a.GetClient() & b.GetClient(),
		Rule:                  a.GetRule() & b.GetRule(),
		Conversation:          a.GetConversation() & b.GetConversation(),
		Integration:           a.GetIntegration() & b.GetIntegration(),
		CannedResponse:        a.GetCannedResponse() & b.GetCannedResponse(),
		Tag:                   a.GetTag() & b.GetTag(),
		WhitelistIp:           a.GetWhitelistIp() & b.GetWhitelistIp(),
		WhitelistUser:         a.GetWhitelistUser() & b.GetWhitelistUser(),
		WhitelistDomain:       a.GetWhitelistDomain() & b.GetWhitelistDomain(),
		Widget:                a.GetWidget() & b.GetWidget(),
		Subscription:          a.GetSubscription() & b.GetSubscription(),
		Invoice:               a.GetInvoice() & b.GetInvoice(),
		PaymentMethod:         a.GetPaymentMethod() & b.GetPaymentMethod(),
		Bill:                  a.GetBill() & b.GetBill(),
		PaymentLog:            a.GetPaymentLog() & b.GetPaymentLog(),
		PaymentComment:        a.GetPaymentComment() & b.GetPaymentComment(),
		User:                  a.GetUser() & b.GetUser(),
		Automation:            a.GetAutomation() & b.GetAutomation(),
		Ping:                  a.GetPing() & b.GetPing(),
		Attribute:             a.GetAttribute() & b.GetAttribute(),
		AgentNotification:     a.GetAgentNotification() & b.GetAgentNotification(),
		ConversationExport:    a.GetConversationExport() & b.GetConversationExport(),
		ConversationReport:    a.GetConversationReport() & b.GetConversationReport(),
		Content:               a.GetContent() & b.GetContent(),
		Pipeline:              a.GetPipeline() & b.GetPipeline(),
		Currency:              a.GetCurrency() & b.GetCurrency(),
		ServiceLevelAgreement: a.GetServiceLevelAgreement() & b.GetServiceLevelAgreement(),
		MessageTemplate:       a.GetMessageTemplate() & b.GetMessageTemplate(),
		AgentPresence:         a.GetAgentPresence() & b.GetAgentPresence(),
		AgentPreference:       a.GetAgentPreference() & b.GetAgentPreference(),
		PromotionCode:         a.GetPromotionCode() & b.GetPromotionCode(),
		Referral:              a.GetReferral() & b.GetReferral(),
	}
}
